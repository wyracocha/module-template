stages:
# - stage: Security
#   jobs:
#   - job: configuration
#     workspace:
#       clean: all
#     steps:
#     - checkout: self
#       clean: "true"
#     - script: docker run --tty --rm -v "$PWD:/app" -w /app bridgecrew/checkov --directory /app
#       displayName: Checkov
#     - script: docker run --tty --rm -v "$PWD:/app" aquasec/tfsec /app
#       displayName: TFSec
- stage: Validation
  jobs:
  - job: Lint
    workspace:
      clean: all
    env:
      JFROG_ACCESS_TOKEN: $(artifactory_token_project)
    steps: 
    - checkout: self
      clean: "true"
    - script: docker run --rm -v "$PWD:/app" -w /app  hashicorp/terraform init
      displayName: Terraform init
    - script: docker run --rm -v "$PWD:/app" -w /app  hashicorp/terraform validate
      displayName: Terraform validate
    - script: docker run --rm -v "$PWD:/app" -w /app  hashicorp/terraform fmt -recursive
      displayName: Terraform fmt
    - script: docker run --rm -v "$PWD:/app" -w /app ghcr.io/terraform-linters/tflint
      displayName: Terraform lint
    - task: PublishPipelineArtifact@1
      displayName: Upload Artifact
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/infra
        artifact: infra-$(Build.BuildNumber)
        publishLocation: pipeline
- stage: Test
  jobs:
  - job: terratest
    workspace:
      clean: all
    steps:
    - checkout: self
      clean: "true" 
    - script:  docker run --rm -v "$PWD:/app" -w /app/test devildeveloper/terratest go mod init ibk/aks
      displayName: Initializing repo
    - script:  docker run --rm -v "$PWD:/app" -w /app/test devildeveloper/terratest go mod tidy
      displayName: Tidy repo
    - script:  docker run --rm -v "$PWD:/app" -w /app/test devildeveloper/terratest go test -v
      displayName: Testing
